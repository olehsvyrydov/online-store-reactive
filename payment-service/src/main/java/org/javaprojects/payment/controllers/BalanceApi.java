/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.javaprojects.payment.controllers;

import org.javaprojects.payment.dtos.GetBalanceResponse;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.server.ServerWebExchange;
import reactor.core.publisher.Mono;

import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", comments = "Generator version: 7.13.0")
@Validated
@Tag(name = "Balance", description = "Operations related to balance")
public interface BalanceApi {

    /**
     * GET /balance : Get the balance on the account
     *
     * @return Balance information (status code 200)
     */
    @Operation(
        operationId = "getBalance",
        summary = "Get the balance on the account",
        tags = { "Balance" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Balance information", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = GetBalanceResponse.class))
            })
        },
        security = {
            @SecurityRequirement(name = "shop-auth", scopes={ "profile" })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/balance",
        produces = { "application/json" }
    )
    
    default Mono<ResponseEntity<GetBalanceResponse>> getBalance(
        @Parameter(hidden = true) final ServerWebExchange exchange
    ) {
        Mono<Void> result = Mono.empty();
        exchange.getResponse().setStatusCode(HttpStatus.valueOf(200));
        for (MediaType mediaType : exchange.getRequest().getHeaders().getAccept()) {
            if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                String exampleString = "{ \"balance\" : 0.8008282 }";
                result = ApiUtil.getExampleResponse(exchange, MediaType.valueOf("application/json"), exampleString);
                break;
            }
        }
        return result.then(Mono.empty());

    }

}

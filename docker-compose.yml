services:
  database:
    image: postgres:latest
    environment:
      POSTGRES_DB: online-store
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 3s
      retries: 3

  redis:
    image: redis:7.4.2-bookworm
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 10s
      timeout: 3s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:21.1
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://database:5432/online-store
      KC_DB_USERNAME: user
      KC_DB_PASSWORD: password
    command:
      - start-dev
      - --import-realm
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json:z
    ports:
      - "8080:8080"
    depends_on:
      - database

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "8082:8082"
    depends_on:
      keycloak:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/mydb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      INITIAL_BALANCE: 200.00
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: "http://keycloak:8080/realms/online-shop-realm"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: "http://keycloak:8080/realms/online-shop-realm/protocol/openid-connect/certs"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8082/actuator/health" ]
      interval: 10s
      timeout: 3s
      retries: 5

  store-service:
    build:
      context: ./store-service
      dockerfile: Dockerfile
    container_name: store-service
    ports:
      - "8081:8081"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_started
      payment-service:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: r2dbc:postgresql://database:5432/online-store
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATA_REDIS_HOST:     redis
      ONLINE_STORE_PATH: 'http://payment-service:8082'
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/online-shop-realm
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/online-shop-realm
      CLIENT_SECRET: xDetEZ1l6A1c1Z96qyze3HyjkSyCg2Zw

volumes:
  db_data:
    driver: local

networks:
  default:
    driver: bridge
    name: online-store-network
